{"meta":{"title":"Flying McDonald","subtitle":"事情总是太多,时间却又太少","description":"相信奇迹的人,本身就像奇迹<br>————麦当<星游记>","author":"Flying McDonald","url":"http://flyingmcdonald.github.io","root":"/"},"pages":[{"title":"about","date":"2019-07-05T06:49:08.000Z","updated":"2019-07-05T06:49:08.697Z","comments":true,"path":"about/index.html","permalink":"http://flyingmcdonald.github.io/about/index.html","excerpt":"","text":""},{"title":"分类","date":"2019-07-05T06:51:07.000Z","updated":"2019-07-07T06:03:50.969Z","comments":true,"path":"categories/index.html","permalink":"http://flyingmcdonald.github.io/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2019-07-05T06:50:17.000Z","updated":"2019-07-07T06:03:14.209Z","comments":true,"path":"tags/index.html","permalink":"http://flyingmcdonald.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Hexo博客的搭建以及Next主题的优化","slug":"Hexo博客的搭建以及Next主题的优化","date":"2019-07-07T07:21:11.000Z","updated":"2019-07-11T15:39:37.956Z","comments":true,"path":"2019/07/07/Hexo博客的搭建以及Next主题的优化/","link":"","permalink":"http://flyingmcdonald.github.io/2019/07/07/Hexo博客的搭建以及Next主题的优化/","excerpt":"从博客搭建到选择主题以及优化主题已经过了一段时间了，在此用这篇文章来记录这段时间的学习(摸鱼)…","text":"从博客搭建到选择主题以及优化主题已经过了一段时间了，在此用这篇文章来记录这段时间的学习(摸鱼)… Hexo搭建安装Node.js 首先需要安装 Node.js : 将下载下来的压缩包进行解压: 1tar -xvf node-v12.6.0-linux-x64.tar.xz 确认一下nodejs下bin目录是否有node 和npm文件，如果有执行软连接，如果没有重新下载执行上边步骤… 建立软连接： 123sudo ln -s nodejs/bin/npm-cli.js /usr/local/bin/npmsudo ln -s nodejs/bin/npx-cli.js /usr/local/bin/npx 检验npm是否为全局变量，在终端中输入 npm –version 若出现版本号，则大功告成： 12npm --version6.9.0 由于Node的默认镜像源在国外，国内使用的话速度堪忧，所以换成淘宝源，之后我们就可以用cnpm代替npm了： 1npm install -g cnpm --registry=https://registry.npm.taobao.org 安装Hexo 确定Node.js安装无误后，接下来就可以安装Hexo了… 创建一个Blog目录，这个目录将是博客的根目录： 1mkdir Blog 进入Blog目录里运行以下命令： 1cnpm install -g hexo-cli //安装Hexo 初始化Hexo 12hexo initcnpm install 当Hexo初始化之后，Blog目录下会出现以下几个文件/目录： 123456Blog├── _config.yml //站点配置文件├── package.json //应用数据文件├── scaffolds //用于放置创建新博文时所需的模板├── source //站点源文件夹└── themes //主题文件夹 初始化之后就可以运行 hexo s 来在本地预览你的博客了 将Hexo部署到Github上 拥有一个github帐号并且创建一个名为username.github.io的仓库(username为你的github用户名且最好为小写)。 进入博客的根目录运行命令： 1cnpm install hexo-deployer-git --save //部署到github时用的插件 打开站点配置文件，找到下面代码并按下面的格式填入相关信息： 1234deploy: type: git repo: https://username:password@github.com/username/username.github.io branch: master 用以下命令将博客部署到github上： 123hexo clean //清空hexo数据hexo g //生成文件hexo d //部署到github 打开github.io仓库，如果看见hexo文件则一切OK 更换主题 虽然Hexo在初始化是会下载一个默认的主题，但由于这个主题并不美观，因此更换主题就是义不容辞的事情啦，所以下面会以更换nexT主题为例子来讲解如何更换主题。 下载nexT 12cd Bloggit clone https://github.com/theme-next/hexo-theme-next/ themes/next 更换nexT 打开站点配置文件，找到 theme 将内容改成： 1theme: next 在根目录运行： 1hexo clean &amp;&amp; hexo g &amp;&amp; hexo d nexT主题的优化 在更换主题后当然要根据自己的爱好进行一番折腾，这里提供了一些主题的优化配置。因为在next的配置文件名也是_config.yml，所以下面统一称next的配置文件为主题配置文件。设置语言 打开站点配置文件，找到 language 属性将其设为 zh-CN 设置头像 打开主题配置文件，找到avatar属性： 12345avatar: url: PATH //例：/Blog/source/blogImg/blog.png，PATH为:/blogImg/blog.png rounded: true or false //将头像显示为圆形 opacity: 0~1 //头像透明度 rotated: true or false //光标放在头像上时头像旋转 字数统计和阅读时间 进入博客根目录，运行命令： 1cnpm install hexo-symbols-count-time --save 打开主题配置文件，找到symbols_count_time属性： 1234567symbols_count_time: separated_meta: true or false //分割符号 item_text_post: true or false //文章字数 item_text_total: true or false //所有文章的总字数 awl: 2 //平均字符长度，en=4、cn=2 wpm: 275 //阅读速度 suffix: mins. //时间计量单位 详情描述 配置完后复制一份到站点配置文件 侧边栏显示阅读进度 打开主题配置文件，找到toc属性并如下配置： 123456toc: enable: true number: true wrap: true expand_all: true max_depth: 6 找到back2top属性并如下配置： 1234back2top: enable: true sidebar: true //返回侧边栏顶端 scrollpercent: true //阅读进度显示 评论功能——gitalk 进入Github主页，依次点击 头像-&gt;settings-&gt;Developer settings-&gt;OAuth Apps-&gt;New OAuth Apps 按照下图填入信息： 注册成功后将会获得一个 client_id 和 client_secret 因为nexT集成了gitalk，所以只需进入主题配置文件找到Gitalk属性填入相应配置即可： 12345678gitalk: enable: true or false github_id: //github用户名 repo: //储存评论用的仓库 client_id: //第三步的client_id client_secret: //第三步的client_secret admin_user: //管理员用户 language: //显示的语言，可用的值：en, es-ES, fr, ru, zh-CN, zh-TW 站点统计——不蒜子 nexT主题也集成了此功能，所以只需进入主题配置文件找到busuanzi属性填入相应配置即可： 12345678busuanzi_count: enable: true or false total_visitors: true or false //站点总的浏览人数 total_visitors_icon: //图标 默认为：user total_views: true or false //站点总的浏览量 total_views_icon: //图标，默认为：eye post_views: //单篇文章的浏览量 post_views_icon: //图标，默认为：eye 背景动画效果——canvas-nest 在nexT目录下运行命令： 1git clone https://github.com/theme-next/theme-next-canvas-nest source/lib/canvas-nest 打开主题配置文件，找到canvas_nest属性并进行配置： 1234567canvas_nest: enable: true or false onmoblie: true or false //在移动端显示 color: \"122,122,122\" //颜色 opacity: 0~1 //透明度 zIndex: -1 //背景层数最好为-1 count: 150 //每行显示的数量 nexT主题内置了多个背景动画效果，但只能启用一个，无法多个并用 博文面板、侧边栏面板的透明度 若想要修改主题的样式，可以在 /next/source/css/_custom/custom.styl 文件里面写入你所需要改变的样式，此文件内的样式会自动覆盖默认样式。例如需要改变博文面板和侧边栏的透明度并添加阴影效果的代码如下： 123456789101112131415161718192021222324252627282930313233343536.content-wrap &#123; background: rgba(255, 255, 255, 0.2); &#125;.header-inner &#123; background: rgba(227, 230, 231, 0.5); border: 1px solid #E3E6E7; border-top: 0px; -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5); -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5); &#125;.sidebar-inner &#123; background: rgba(235, 235, 235, 0.5); border: 1px solid #EBEBEB; -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5); -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5); &#125;.sidebar &#123; background: rgba(255, 255, 255, 0.0); &#125;.menu .menu-item a:hover, .menu-item-active a &#123; background: rgba(250, 250, 250, 0.6); border-bottom-color: rgba(250, 250, 250, 0.6); &#125;.post &#123; margin-bottom: 60px; padding: 25px; -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5); -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5); &#125; 将文章末尾标签前面的’#’改成图标 打开主题配置文件，找到 tag_icon 属性将其改为 true 高级看板娘(说话,变装一应俱全) 在nexT目录下运行命令： 1git clone https://github.com/stevenjoezhang/live2d-widget.git source/live2d-widget 在 layout/_layout.swig 文件的 ** 标签里添加下面三行代码： 12345&lt;script src=\"https://cdn.jsdelivr.net/npm/jquery/dist/jquery.min.js\"&gt;&lt;/script&gt;&lt;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/font-awesome/css/font-awesome.min.css\"/&gt;&lt;script src=\"/live2d-widget/autoload.js\"&gt;&lt;/script&gt; 在主题配置目录里添加配置： 12live2d: enable: true live2d具体配置文件为 source/live2d-widget/ 里的 waifu.css、waifu-tip.css、waifu-tip.json文件。详情请参考live2d-widget :)","categories":[{"name":"博客","slug":"博客","permalink":"http://flyingmcdonald.github.io/categories/博客/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://flyingmcdonald.github.io/tags/Linux/"},{"name":"博客","slug":"博客","permalink":"http://flyingmcdonald.github.io/tags/博客/"}]},{"title":"Linux下误将文件覆盖后的解决方法","slug":"Linux下误将文件覆盖后的解决方法","date":"2019-07-04T08:09:17.000Z","updated":"2019-07-06T12:55:19.714Z","comments":true,"path":"2019/07/04/Linux下误将文件覆盖后的解决方法/","link":"","permalink":"http://flyingmcdonald.github.io/2019/07/04/Linux下误将文件覆盖后的解决方法/","excerpt":"事件起因对重定向输出符号 &gt;(覆盖) 和 &gt;&gt;(从最后一行开始追加内容) 错误使用导致文件内容被覆盖(使用 mv 命令覆盖也适用)","text":"事件起因对重定向输出符号 &gt;(覆盖) 和 &gt;&gt;(从最后一行开始追加内容) 错误使用导致文件内容被覆盖(使用 mv 命令覆盖也适用) 解决方法经过查找资料后发现被覆盖的文件内容能够通过 grep 与 dd 这两个命令来找到 开始查找首先用 pwd 命令确认文件所在的目录(我的是在/home目录)， 用 fdisk -h 确认文件所在目录挂在哪个磁盘 123456789Filesystem Size Used Avail Use% Mounted onudev 3.9G 0 3.9G 0% /devtmpfs 787M 18M 770M 3% /run/dev/sda4 108G 50G 53G 49% /tmpfs 3.9G 63M 3.8G 2% /dev/shmtmpfs 5.0M 4.0K 5.0M 1% /run/locktmpfs 3.9G 0 3.9G 0% /sys/fs/cgroup/dev/sda3 512M 5.3M 507M 2% /boot/efitmpfs 787M 28K 787M 1% /run/user/1000 因为我用的是整个磁盘做的/目录(图方便)，所以可以看到我的/目录挂在 /dev/sda4 上。然后用使用 grep -a -b 命令在磁盘上通过文件内容中比较有代表性的字符串(字符串越长搜索结果越准确)来查找文件所在偏移的位置，并返回部分内容。比如： 1sudo grep -a -b 'echo \"YYFNB\"' /dev/sda4 grep中几个参数的解释-a用来把二进制文件当文本文件处理-b用来保证显示查找出的结果的偏移位置 其中 echo “YYFNB” 是我文件中比较有代表性的字符串，而 /dev/sda4 是我文件所在的磁盘位置。执行命令后过一会会出现搜索结果(一般查找的文件都会在前几个结果里)： 115938740228 : echo \"YYFNB\" 然后记住搜索结果中前面的偏移信息 15938740228 ，接着使用 dd 命令利用偏移信息直接从磁盘读取文件内容： 1dd if=/dev/sda4 count=1 skip=$(expr 15938740228 / 512) dd中使用的几个参数的解释count指明读取多少个数据块if指定读取源skip指定跳过多少个块（后面除以512是因为，skip是跳过ibs-sized blocks，而ibs默认大小为512） 注意事项：字符串一定要足够长以及有一定的单一性不然可能有多个搜索结果 参考文章https://my.oschina.net/u/573025/blog/378629","categories":[],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://flyingmcdonald.github.io/tags/Linux/"},{"name":"文件管理","slug":"文件管理","permalink":"http://flyingmcdonald.github.io/tags/文件管理/"}]},{"title":"Markdown的基本使用方法","slug":"Markdown的基本使用方法","date":"2019-07-03T06:36:27.000Z","updated":"2019-07-03T07:38:03.108Z","comments":true,"path":"2019/07/03/Markdown的基本使用方法/","link":"","permalink":"http://flyingmcdonald.github.io/2019/07/03/Markdown的基本使用方法/","excerpt":"标题markdown的标题用#来表示,#的个数表示标题的级数:eg: 123456# 这是一个一级标题## 这是一个二级标题### 这是一个三级标题#### 这是一个四级标题##### 这是一个五级标题###### 这是一个六级标题","text":"标题markdown的标题用#来表示,#的个数表示标题的级数:eg: 123456# 这是一个一级标题## 这是一个二级标题### 这是一个三级标题#### 这是一个四级标题##### 这是一个五级标题###### 这是一个六级标题 字体 加粗 将要加粗的文字用两个**包起来 eg： 这是粗体 斜体 将要倾斜的文字用一个*包起来 eg: 这是斜体 加粗斜体 将要加粗倾斜的文字用三个***包起来 eg： 这是加粗斜体 删除线 将要加删除线的文字用两个~~包起来 eg：这是将要删除的文字 引用在引用的文字前面加上&gt;即可 eg： 这是引用的内容 这也是引用的内容 引中引 分割线用三个及其以上的-或*表示 图片语法： 12345![图片alt](图片地址 &apos;&apos;图片title&apos;&apos;)图片alt就是显示在图片下面的文字，相当于对图片内容的解释。图片title就是图片的标题，当鼠标移动到图片上时显示的内容。title可加可不加 eg： 超链接语法： 12345[超链接名](超链接地址 &quot;超链接title&quot;)超链接地址要加http://或https://title可加可不加 eg：baidu 列表1. 无序列表语法：无序列表用- + *任何一种都可以 12345- 列表内容+ 列表内容* 列表内容注：要加空格 2. 有序列表语法： 有序列表只需在文字前面加上1. 123456eg： 1. 列表内容 2. 列表内容 3. 列表内容注：序号和文字之间要加空格 表格1234567891011表头|表头|表头---|:--:|---:内容|内容|内容内容|内容|内容第二行分割表头和内容。- 有一个就行，为了对齐，多加了几个文字默认居左-两边加：表示文字居中-右边加：表示文字居右注：原生的语法两边都要用 | 包起来。此处省略 eg： 姓名 技能 表头 刘 关 张 代码语法：单行代码用一个反引号包起来多行代码用三个反引号包起来 流程图1234567st=&gt;start: 开始op=&gt;operation: My Operationcond=&gt;condition: Yes or No?e=&gt;endst-&gt;op-&gt;condcond(yes)-&gt;econd(no)-&gt;op","categories":[],"tags":[{"name":"技术学习","slug":"技术学习","permalink":"http://flyingmcdonald.github.io/tags/技术学习/"}]}]}
{"meta":{"title":"Flying McDonald","subtitle":"事情总是太多,时间却又太少","description":"相信奇迹的人,本身就像奇迹<br>————麦当<星游记>","author":"Flying McDonald","url":"http://flyingmcdonald.github.io","root":"/"},"pages":[{"title":"文档","date":"2019-07-21T13:33:50.000Z","updated":"2019-07-21T14:03:01.477Z","comments":true,"path":"PDF/index.html","permalink":"http://flyingmcdonald.github.io/PDF/index.html","excerpt":"","text":"Java开发规范"},{"title":"about","date":"2019-07-05T06:49:08.000Z","updated":"2019-07-05T06:49:08.697Z","comments":true,"path":"about/index.html","permalink":"http://flyingmcdonald.github.io/about/index.html","excerpt":"","text":""},{"title":"分类","date":"2019-07-05T06:51:07.000Z","updated":"2019-07-07T06:03:50.969Z","comments":true,"path":"categories/index.html","permalink":"http://flyingmcdonald.github.io/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2019-07-05T06:50:17.000Z","updated":"2019-07-07T06:03:14.209Z","comments":true,"path":"tags/index.html","permalink":"http://flyingmcdonald.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"静态包含,动态包含与注释","slug":"静态包含-动态包含与注释","date":"2019-07-26T08:21:45.000Z","updated":"2019-07-26T08:57:41.107Z","comments":true,"path":"静态包含-动态包含与注释/","link":"","permalink":"http://flyingmcdonald.github.io/静态包含-动态包含与注释/","excerpt":"在jsp页面中，静态包含与动态包含的区别以及HEML注释与JSP注释的区别","text":"在jsp页面中，静态包含与动态包含的区别以及HEML注释与JSP注释的区别 静态包含—&lt;%@ include page=”” %&gt; 静态包含：将所包含的页面内容加入页面一起编译，被包含的文件不会单独生成字节码文件。 动态包含—&lt;jsp:include page=”” /&gt; 动态包含：被包含的内容也会独立生成字节码文件。 注释 HTML注释：&lt;!-- --&gt;注释的内容参与编译，会生成到源码中。所以不能用html注释EL表达式和JSPL标签库。 JSP注释：&lt;%-- --%&gt;注释的内容不参与编译，不会生成到源码中。","categories":[{"name":"java","slug":"java","permalink":"http://flyingmcdonald.github.io/categories/java/"}],"tags":[{"name":"java","slug":"java","permalink":"http://flyingmcdonald.github.io/tags/java/"},{"name":"jsp","slug":"jsp","permalink":"http://flyingmcdonald.github.io/tags/jsp/"}]},{"title":"我惊了！原来部署项目的上下文路径可以这么短","slug":"我惊了！原来部署项目的上下文路径可以这么短","date":"2019-07-21T09:00:21.000Z","updated":"2019-07-21T11:44:32.243Z","comments":true,"path":"我惊了！原来部署项目的上下文路径可以这么短/","link":"","permalink":"http://flyingmcdonald.github.io/我惊了！原来部署项目的上下文路径可以这么短/","excerpt":"在开发javaweb项目时用http://localhost:端口号/项目名称/index.jsp这样巨长无比的上下文路径觉得不顺眼？配置一下，你就能用http://localhost愉快的测试代码啦 :)","text":"在开发javaweb项目时用http://localhost:端口号/项目名称/index.jsp这样巨长无比的上下文路径觉得不顺眼？配置一下，你就能用http://localhost愉快的测试代码啦 :) 环境 Eclipse 原理 Tomcat服务器在部署项目时将项目默认放在webapp目录下，而要省略上下文路径需要项目指定放在webapp/ROOT目录内. 一、从项目Properties面板中改路径 进行配置前需要先清理Tomcat服务器缓存，具体请Google一下 选中你的项目，右键打开properties 在搜索框搜索Web Project Settings 将Context root的内容改为”/“ OK！ 二、从配置文件中改路径 选中你的项目 点击右边的V形图标 点击Filters 取消选中.* resource，保存退出 展开你的项目，你能看见多了一个.settings文件夹，到里面找到org.eclipse.wst.common.component文件 找到org.eclipse.wst.common.component最底部的属性并做下面修改 1&lt;property name=\"context-root\" value=\"/\"/&gt; OK！","categories":[{"name":"其它","slug":"其它","permalink":"http://flyingmcdonald.github.io/categories/其它/"}],"tags":[{"name":"其它","slug":"其它","permalink":"http://flyingmcdonald.github.io/tags/其它/"}]},{"title":"SSM项目踩坑系列(一)","slug":"SSM项目踩坑系列-一","date":"2019-07-19T15:20:37.000Z","updated":"2019-07-21T11:57:45.180Z","comments":true,"path":"SSM项目踩坑系列-一/","link":"","permalink":"http://flyingmcdonald.github.io/SSM项目踩坑系列-一/","excerpt":"在经过一段时间对i3wm的折腾，我终于放弃了…于是从今天开始正式踏上ssm框架学习(踩坑)之路。:)","text":"在经过一段时间对i3wm的折腾，我终于放弃了…于是从今天开始正式踏上ssm框架学习(踩坑)之路。:) 环境 Tomcat 9 Maven 3.6.0 Eclipse 4.11.0 问题一 在开启Tomcat服务器遇到 class path resource [xxx/xxx] cannot be opened because it does not exist 怎么办？ 解决方法 此类问题一般都是由于目标文件位置与Spring的.xml配置文件内关于目标文件的ClassPath 不同所导致，所以解决此类问题只需要将ClassPath与目标文件路径一致即可。 例子 我遇到的情况是class path resource [config/jdbc.properties] cannot be opened because it does not exist，当时我查看Spring-context.xml时看到的是这个: 123&lt;bean id=\"propertyPlaceholderConfigurer\" class=\"org.springframework.beans.factory.config.PropertyPlaceholderConfigurer\"&gt; &lt;property name=\"locations\" value=\"classpath:config/jdbc.properties\" /&gt;&lt;/bean&gt; 里面的内容需要我将jdbc.properties放入config文件夹中，可是我没有config文件夹呀，所以才会出现上述的异常。这里我新建一个config文件夹再将jdbc.properties移到里面，至此大功告成。 问题二 创建的maven项目如何部署到Tomcat服务器？ 解决方法 选中maven项目并按Alt+Enter打开properties先取消选中Dynamic Web Moudle点击Apply，然后再次选中Dynamic Web Moudle 注意Dynamic Web Moudle版本需保持一致 此时会出现这个:点它又会出现这个:然后将WebContent改为/src/main/webapp，记得要勾选下面的Generate web.xml deployment descriptor.至此大功告成.","categories":[{"name":"-java开发","slug":"java开发","permalink":"http://flyingmcdonald.github.io/categories/java开发/"}],"tags":[{"name":"java","slug":"java","permalink":"http://flyingmcdonald.github.io/tags/java/"},{"name":"ssm框架","slug":"ssm框架","permalink":"http://flyingmcdonald.github.io/tags/ssm框架/"},{"name":"踩坑系列","slug":"踩坑系列","permalink":"http://flyingmcdonald.github.io/tags/踩坑系列/"}]},{"title":"Hexo博客的搭建以及Next主题的优化","slug":"Hexo博客的搭建以及Next主题的优化","date":"2019-07-07T07:21:11.000Z","updated":"2019-07-13T09:36:07.900Z","comments":true,"path":"Hexo博客的搭建以及Next主题的优化/","link":"","permalink":"http://flyingmcdonald.github.io/Hexo博客的搭建以及Next主题的优化/","excerpt":"从博客搭建到选择主题以及优化主题已经过了一段时间了，在此用这篇文章来记录这段时间的学习(摸鱼)…","text":"从博客搭建到选择主题以及优化主题已经过了一段时间了，在此用这篇文章来记录这段时间的学习(摸鱼)… Hexo搭建安装Node.js 首先需要安装 Node.js : 将下载下来的压缩包进行解压: 1tar -xvf node-v12.6.0-linux-x64.tar.xz 确认一下nodejs下bin目录是否有node 和npm文件，如果有执行软连接，如果没有重新下载执行上边步骤… 建立软连接： 123sudo ln -s nodejs/bin/npm-cli.js /usr/local/bin/npmsudo ln -s nodejs/bin/npx-cli.js /usr/local/bin/npx 检验npm是否为全局变量，在终端中输入 npm –version 若出现版本号，则大功告成： 12npm --version6.9.0 由于Node的默认镜像源在国外，国内使用的话速度堪忧，所以换成淘宝源，之后我们就可以用cnpm代替npm了： 1npm install -g cnpm --registry=https://registry.npm.taobao.org 安装Hexo 确定Node.js安装无误后，接下来就可以安装Hexo了… 创建一个Blog目录，这个目录将是博客的根目录： 1mkdir Blog 进入Blog目录里运行以下命令： 1cnpm install -g hexo-cli //安装Hexo 初始化Hexo 12hexo initcnpm install 当Hexo初始化之后，Blog目录下会出现以下几个文件/目录： 123456Blog├── _config.yml //站点配置文件├── package.json //应用数据文件├── scaffolds //用于放置创建新博文时所需的模板├── source //站点源文件夹└── themes //主题文件夹 初始化之后就可以运行 hexo s 来在本地预览你的博客了 将Hexo部署到Github上 拥有一个github帐号并且创建一个名为username.github.io的仓库(username为你的github用户名且最好为小写)。 进入博客的根目录运行命令： 1cnpm install hexo-deployer-git --save //部署到github时用的插件 打开站点配置文件，找到下面代码并按下面的格式填入相关信息： 1234deploy: type: git repo: https://username:password@github.com/username/username.github.io branch: master 用以下命令将博客部署到github上： 123hexo clean //清空hexo数据hexo g //生成文件hexo d //部署到github 打开github.io仓库，如果看见hexo文件则一切OK 更换主题 虽然Hexo在初始化是会下载一个默认的主题，但由于这个主题并不美观，因此更换主题就是义不容辞的事情啦，所以下面会以更换nexT主题为例子来讲解如何更换主题。 下载nexT 12cd Bloggit clone https://github.com/theme-next/hexo-theme-next/ themes/next 更换nexT 打开站点配置文件，找到 theme 将内容改成： 1theme: next 在根目录运行： 1hexo clean &amp;&amp; hexo g &amp;&amp; hexo d nexT主题的优化 在更换主题后当然要根据自己的爱好进行一番折腾，这里提供了一些主题的优化配置。因为在next的配置文件名也是_config.yml，所以下面统一称next的配置文件为主题配置文件。设置语言 打开站点配置文件，找到 language 属性将其设为 zh-CN 设置头像 打开主题配置文件，找到avatar属性： 12345avatar: url: PATH //例：/Blog/source/blogImg/blog.png，PATH为:/blogImg/blog.png rounded: true or false //将头像显示为圆形 opacity: 0~1 //头像透明度 rotated: true or false //光标放在头像上时头像旋转 字数统计和阅读时间 进入博客根目录，运行命令： 1cnpm install hexo-symbols-count-time --save 打开主题配置文件，找到symbols_count_time属性： 1234567symbols_count_time: separated_meta: true or false //分割符号 item_text_post: true or false //文章字数 item_text_total: true or false //所有文章的总字数 awl: 2 //平均字符长度，en=4、cn=2 wpm: 275 //阅读速度 suffix: mins. //时间计量单位 详情描述 配置完后复制一份到站点配置文件 侧边栏显示阅读进度 打开主题配置文件，找到toc属性并如下配置： 123456toc: enable: true number: true wrap: true expand_all: true max_depth: 6 找到back2top属性并如下配置： 1234back2top: enable: true sidebar: true //返回侧边栏顶端 scrollpercent: true //阅读进度显示 评论功能——gitalk 进入Github主页，依次点击 头像-&gt;settings-&gt;Developer settings-&gt;OAuth Apps-&gt;New OAuth Apps 按照下图填入信息： 注册成功后将会获得一个 client_id 和 client_secret 因为nexT集成了gitalk，所以只需进入主题配置文件找到Gitalk属性填入相应配置即可： 12345678gitalk: enable: true or false github_id: //github用户名 repo: //储存评论用的仓库 client_id: //第三步的client_id client_secret: //第三步的client_secret admin_user: //管理员用户 language: //显示的语言，可用的值：en, es-ES, fr, ru, zh-CN, zh-TW 站点统计——不蒜子 nexT主题也集成了此功能，所以只需进入主题配置文件找到busuanzi属性填入相应配置即可： 12345678busuanzi_count: enable: true or false total_visitors: true or false //站点总的浏览人数 total_visitors_icon: //图标 默认为：user total_views: true or false //站点总的浏览量 total_views_icon: //图标，默认为：eye post_views: //单篇文章的浏览量 post_views_icon: //图标，默认为：eye 背景动画效果——canvas-nest 在nexT目录下运行命令： 1git clone https://github.com/theme-next/theme-next-canvas-nest source/lib/canvas-nest 打开主题配置文件，找到canvas_nest属性并进行配置： 1234567canvas_nest: enable: true or false onmoblie: true or false //在移动端显示 color: \"122,122,122\" //颜色 opacity: 0~1 //透明度 zIndex: -1 //背景层数最好为-1 count: 150 //每行显示的数量 nexT主题内置了多个背景动画效果，但只能启用一个，无法多个并用 博文面板、侧边栏面板的透明度 若想要修改主题的样式，可以在 /next/source/css/_custom/custom.styl 文件里面写入你所需要改变的样式，此文件内的样式会自动覆盖默认样式。例如需要改变博文面板和侧边栏的透明度并添加阴影效果的代码如下： 123456789101112131415161718192021222324252627282930313233343536.content-wrap &#123; background: rgba(255, 255, 255, 0.2); &#125;.header-inner &#123; background: rgba(227, 230, 231, 0.5); border: 1px solid #E3E6E7; border-top: 0px; -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5); -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5); &#125;.sidebar-inner &#123; background: rgba(235, 235, 235, 0.5); border: 1px solid #EBEBEB; -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5); -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5); &#125;.sidebar &#123; background: rgba(255, 255, 255, 0.0); &#125;.menu .menu-item a:hover, .menu-item-active a &#123; background: rgba(250, 250, 250, 0.6); border-bottom-color: rgba(250, 250, 250, 0.6); &#125;.post &#123; margin-bottom: 60px; padding: 25px; -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5); -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5); &#125; 将文章末尾标签前面的’#’改成图标 打开主题配置文件，找到 tag_icon 属性将其改为 true 高级看板娘(说话,变装一应俱全) 在nexT目录下运行命令： 1git clone https://github.com/stevenjoezhang/live2d-widget.git source/live2d-widget 在 layout/_layout.swig 文件的 ** 标签里添加下面三行代码： 12345&lt;script src=\"https://cdn.jsdelivr.net/npm/jquery/dist/jquery.min.js\"&gt;&lt;/script&gt;&lt;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/font-awesome/css/font-awesome.min.css\"/&gt;&lt;script src=\"/live2d-widget/autoload.js\"&gt;&lt;/script&gt; 在主题配置目录里添加配置： 12live2d: enable: true live2d具体配置文件为 source/live2d-widget/ 里的 waifu.css、waifu-tip.css、waifu-tip.json文件。详情请参考live2d-widget :) Note提示块的使用 菜鸡感受…… 其实在一开始我是不知道还有Note提示块这种东西的，直到我看了xiaoding的某一篇博客…然后菜鸡的我花了一大段时间，通过百度、Google搜索各种蒙(菜的人连应该搜哪个关键字都不知道23333)终于让我蒙对了关键字，对！没有搜不到的结果，只有蒙不对的关键字 ：）后来的剧情就顺畅了许多，废话少说，上代码。 这是代码… 1234567891011121314151617181920212223&#123;% note default %&#125;default 提示块标签&#123;% endnote %&#125;&#123;% note primary %&#125;primary 提示块标签&#123;% endnote %&#125;&#123;% note success %&#125;success 提示块标签&#123;% endnote %&#125;&#123;% note info %&#125;info 提示块标签&#123;% endnote %&#125;&#123;% note warning %&#125;warning 提示块标签&#123;% endnote %&#125;&#123;% note danger %&#125;danger 提示块标签&#123;% endnote %&#125; 这是效果… default 提示块标签 primary 提示块标签 success 提示块标签 info 提示块标签 warning 提示块标签 danger 提示块标签 在主题配置文件中可以修改风格 12345678910111213# Note tag (bs-callout). note: # Note tag style values: # - simple bs-callout old alert style. Default. # - modern bs-callout new (v2-v3) alert style. # - flat flat callout style with background, like on Mozilla or StackOverflow. # - disabled disable all CSS styles import of note tag. style: modern icons: true border_radius: 0 # Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6). # Offset also applied to label tag variables. This option can work with disabled note tag. light_bg_offset: 0 参考文章：在hexo-NexT中插入note提示块next主题官方最全文档","categories":[{"name":"博客","slug":"博客","permalink":"http://flyingmcdonald.github.io/categories/博客/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://flyingmcdonald.github.io/tags/Linux/"},{"name":"博客","slug":"博客","permalink":"http://flyingmcdonald.github.io/tags/博客/"}]},{"title":"Linux下误将文件覆盖后的解决方法","slug":"Linux下误将文件覆盖后的解决方法","date":"2019-07-04T08:09:17.000Z","updated":"2019-07-06T12:55:19.714Z","comments":true,"path":"Linux下误将文件覆盖后的解决方法/","link":"","permalink":"http://flyingmcdonald.github.io/Linux下误将文件覆盖后的解决方法/","excerpt":"事件起因对重定向输出符号 &gt;(覆盖) 和 &gt;&gt;(从最后一行开始追加内容) 错误使用导致文件内容被覆盖(使用 mv 命令覆盖也适用)","text":"事件起因对重定向输出符号 &gt;(覆盖) 和 &gt;&gt;(从最后一行开始追加内容) 错误使用导致文件内容被覆盖(使用 mv 命令覆盖也适用) 解决方法经过查找资料后发现被覆盖的文件内容能够通过 grep 与 dd 这两个命令来找到 开始查找首先用 pwd 命令确认文件所在的目录(我的是在/home目录)， 用 fdisk -h 确认文件所在目录挂在哪个磁盘 123456789Filesystem Size Used Avail Use% Mounted onudev 3.9G 0 3.9G 0% /devtmpfs 787M 18M 770M 3% /run/dev/sda4 108G 50G 53G 49% /tmpfs 3.9G 63M 3.8G 2% /dev/shmtmpfs 5.0M 4.0K 5.0M 1% /run/locktmpfs 3.9G 0 3.9G 0% /sys/fs/cgroup/dev/sda3 512M 5.3M 507M 2% /boot/efitmpfs 787M 28K 787M 1% /run/user/1000 因为我用的是整个磁盘做的/目录(图方便)，所以可以看到我的/目录挂在 /dev/sda4 上。然后用使用 grep -a -b 命令在磁盘上通过文件内容中比较有代表性的字符串(字符串越长搜索结果越准确)来查找文件所在偏移的位置，并返回部分内容。比如： 1sudo grep -a -b 'echo \"YYFNB\"' /dev/sda4 grep中几个参数的解释-a用来把二进制文件当文本文件处理-b用来保证显示查找出的结果的偏移位置 其中 echo “YYFNB” 是我文件中比较有代表性的字符串，而 /dev/sda4 是我文件所在的磁盘位置。执行命令后过一会会出现搜索结果(一般查找的文件都会在前几个结果里)： 115938740228 : echo \"YYFNB\" 然后记住搜索结果中前面的偏移信息 15938740228 ，接着使用 dd 命令利用偏移信息直接从磁盘读取文件内容： 1dd if=/dev/sda4 count=1 skip=$(expr 15938740228 / 512) dd中使用的几个参数的解释count指明读取多少个数据块if指定读取源skip指定跳过多少个块（后面除以512是因为，skip是跳过ibs-sized blocks，而ibs默认大小为512） 注意事项：字符串一定要足够长以及有一定的单一性不然可能有多个搜索结果 参考文章https://my.oschina.net/u/573025/blog/378629","categories":[],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://flyingmcdonald.github.io/tags/Linux/"},{"name":"文件管理","slug":"文件管理","permalink":"http://flyingmcdonald.github.io/tags/文件管理/"}]},{"title":"Markdown的基本使用方法","slug":"Markdown的基本使用方法","date":"2019-07-03T06:36:27.000Z","updated":"2019-07-13T08:59:14.194Z","comments":true,"path":"Markdown的基本使用方法/","link":"","permalink":"http://flyingmcdonald.github.io/Markdown的基本使用方法/","excerpt":"标题markdown的标题用#来表示,#的个数表示标题的级数:eg: 123456# 这是一个一级标题## 这是一个二级标题### 这是一个三级标题#### 这是一个四级标题##### 这是一个五级标题###### 这是一个六级标题","text":"标题markdown的标题用#来表示,#的个数表示标题的级数:eg: 123456# 这是一个一级标题## 这是一个二级标题### 这是一个三级标题#### 这是一个四级标题##### 这是一个五级标题###### 这是一个六级标题 字体 加粗 将要加粗的文字用两个**包起来 eg： 这是粗体 斜体 将要倾斜的文字用一个*包起来 eg: 这是斜体 加粗斜体 将要加粗倾斜的文字用三个***包起来 eg： 这是加粗斜体 删除线 将要加删除线的文字用两个~~包起来 eg：这是将要删除的文字 引用在引用的文字前面加上&gt;即可 eg： 这是引用的内容 这也是引用的内容 引中引 分割线用三个及其以上的-或*表示 图片语法： 12345![图片alt](图片地址 &apos;&apos;图片title&apos;&apos;)图片alt就是显示在图片下面的文字，相当于对图片内容的解释。图片title就是图片的标题，当鼠标移动到图片上时显示的内容。title可加可不加 eg： 超链接语法： 12345[超链接名](超链接地址 &quot;超链接title&quot;)超链接地址要加http://或https://title可加可不加 eg：baidu 列表1. 无序列表语法：无序列表用- + *任何一种都可以 12345- 列表内容+ 列表内容* 列表内容注：要加空格 2. 有序列表语法： 有序列表只需在文字前面加上1. 123456eg： 1. 列表内容 2. 列表内容 3. 列表内容注：序号和文字之间要加空格 表格1234567891011表头|表头|表头---|:--:|---:内容|内容|内容内容|内容|内容第二行分割表头和内容。- 有一个就行，为了对齐，多加了几个文字默认居左-两边加：表示文字居中-右边加：表示文字居右注：原生的语法两边都要用 | 包起来。此处省略 eg： 姓名 技能 表头 刘 关 张 代码语法：单行代码用一个反引号包起来多行代码用三个反引号包起来 流程图1234567st=&gt;start: 开始op=&gt;operation: My Operationcond=&gt;condition: Yes or No?e=&gt;endst-&gt;op-&gt;condcond(yes)-&gt;econd(no)-&gt;op default 提示块标签 Text","categories":[],"tags":[{"name":"技术学习","slug":"技术学习","permalink":"http://flyingmcdonald.github.io/tags/技术学习/"}]}]}
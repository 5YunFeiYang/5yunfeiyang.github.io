{"meta":{"title":"Flying McDonald","subtitle":null,"description":null,"author":"Flying McDonald","url":"http://flyingmcdonald.github.io","root":"/"},"pages":[{"title":"about","date":"2019-07-05T06:49:08.000Z","updated":"2019-07-05T06:49:08.697Z","comments":true,"path":"about/index.html","permalink":"http://flyingmcdonald.github.io/about/index.html","excerpt":"","text":""},{"title":"tags","date":"2019-07-05T06:50:17.000Z","updated":"2019-07-05T06:50:17.221Z","comments":true,"path":"tags/index.html","permalink":"http://flyingmcdonald.github.io/tags/index.html","excerpt":"","text":""},{"title":"categories","date":"2019-07-05T06:51:07.000Z","updated":"2019-07-05T06:51:07.259Z","comments":true,"path":"categories/index.html","permalink":"http://flyingmcdonald.github.io/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"Linux下误将文件覆盖后的解决方法","slug":"Linux下误将文件覆盖后的解决方法","date":"2019-07-04T08:09:17.000Z","updated":"2019-07-04T10:47:20.674Z","comments":true,"path":"2019/07/04/Linux下误将文件覆盖后的解决方法/","link":"","permalink":"http://flyingmcdonald.github.io/2019/07/04/Linux下误将文件覆盖后的解决方法/","excerpt":"事件起因对重定向输出符号 &gt;(覆盖) 和 &gt;&gt;(从最后一行开始追加内容) 错误使用导致文件内容被覆盖(使用 mv 命令覆盖也适用)","text":"事件起因对重定向输出符号 &gt;(覆盖) 和 &gt;&gt;(从最后一行开始追加内容) 错误使用导致文件内容被覆盖(使用 mv 命令覆盖也适用) 解决方法经过查找资料后发现被覆盖的文件内容能够通过 grep 与 dd 这两个命令来找到 开始查找首先用 pwd 命令确认文件所在的目录(我的是在家目录)， 用 df -h 确认文件所在目录挂在哪个磁盘 123456789Filesystem Size Used Avail Use% Mounted onudev 3.9G 0 3.9G 0% /devtmpfs 787M 18M 770M 3% /run/dev/sda4 108G 50G 53G 49% /tmpfs 3.9G 63M 3.8G 2% /dev/shmtmpfs 5.0M 4.0K 5.0M 1% /run/locktmpfs 3.9G 0 3.9G 0% /sys/fs/cgroup/dev/sda3 512M 5.3M 507M 2% /boot/efitmpfs 787M 28K 787M 1% /run/user/1000 因为我用的是整个磁盘做的/目录(图方便)，所以可以看到我的/目录挂在 /dev/sda4 上。然后用使用 grep -a -b 命令在磁盘上通过文件内容中比较有代表性的字符串(字符串越长搜索结果越准确)来查找文件所在偏移的位置，并返回部分内容。比如： 1sudo grep -a -b 'echo \"YYFNB\"' /dev/sda4 grep中几个参数的解释-a用来把二进制文件当文本文件处理-b用来保证显示查找出的结果的偏移位置 其中 echo “YYFNB” 是我文件中比较有代表性的字符串，而 /dev/sda4 是我文件所在的磁盘位置。执行命令后过一会会出现搜索结果(一般查找的文件都会在前几个结果里)： 115938740228 : echo \"YYFNB\" 然后记住搜索结果中前面的偏移信息 15938740228 ，接着使用 dd 命令利用偏移信息直接从磁盘读取文件内容： 1dd if=/dev/sda4 count=1 skip=$(expr 15938740228 / 512) dd中使用的几个参数的解释count指明读取多少个数据块if指定读取源skip指定跳过多少个块（后面除以512是因为，skip是跳过ibs-sized blocks，而ibs默认大小为512） 注意事项：字符串一定要足够长以及有一定的单一性不然可能有多个搜索结果 参考文章https://my.oschina.net/u/573025/blog/378629","categories":[],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://flyingmcdonald.github.io/tags/Linux/"},{"name":"文件管理","slug":"文件管理","permalink":"http://flyingmcdonald.github.io/tags/文件管理/"}]},{"title":"Markdown的基本使用方法","slug":"Markdown的基本使用方法","date":"2019-07-03T06:36:27.000Z","updated":"2019-07-03T07:38:03.108Z","comments":true,"path":"2019/07/03/Markdown的基本使用方法/","link":"","permalink":"http://flyingmcdonald.github.io/2019/07/03/Markdown的基本使用方法/","excerpt":"标题markdown的标题用#来表示,#的个数表示标题的级数:eg: 123456# 这是一个一级标题## 这是一个二级标题### 这是一个三级标题#### 这是一个四级标题##### 这是一个五级标题###### 这是一个六级标题","text":"标题markdown的标题用#来表示,#的个数表示标题的级数:eg: 123456# 这是一个一级标题## 这是一个二级标题### 这是一个三级标题#### 这是一个四级标题##### 这是一个五级标题###### 这是一个六级标题 字体 加粗 将要加粗的文字用两个**包起来 eg： 这是粗体 斜体 将要倾斜的文字用一个*包起来 eg: 这是斜体 加粗斜体 将要加粗倾斜的文字用三个***包起来 eg： 这是加粗斜体 删除线 将要加删除线的文字用两个~~包起来 eg：这是将要删除的文字 引用在引用的文字前面加上&gt;即可 eg： 这是引用的内容 这也是引用的内容 引中引 分割线用三个及其以上的-或*表示 图片语法： 12345![图片alt](图片地址 &apos;&apos;图片title&apos;&apos;)图片alt就是显示在图片下面的文字，相当于对图片内容的解释。图片title就是图片的标题，当鼠标移动到图片上时显示的内容。title可加可不加 eg： 超链接语法： 12345[超链接名](超链接地址 &quot;超链接title&quot;)超链接地址要加http://或https://title可加可不加 eg：baidu 列表1. 无序列表语法：无序列表用- + *任何一种都可以 12345- 列表内容+ 列表内容* 列表内容注：要加空格 2. 有序列表语法： 有序列表只需在文字前面加上1. 123456eg： 1. 列表内容 2. 列表内容 3. 列表内容注：序号和文字之间要加空格 表格1234567891011表头|表头|表头---|:--:|---:内容|内容|内容内容|内容|内容第二行分割表头和内容。- 有一个就行，为了对齐，多加了几个文字默认居左-两边加：表示文字居中-右边加：表示文字居右注：原生的语法两边都要用 | 包起来。此处省略 eg： 姓名 技能 表头 刘 关 张 代码语法：单行代码用一个反引号包起来多行代码用三个反引号包起来 流程图1234567st=&gt;start: 开始op=&gt;operation: My Operationcond=&gt;condition: Yes or No?e=&gt;endst-&gt;op-&gt;condcond(yes)-&gt;econd(no)-&gt;op","categories":[],"tags":[{"name":"技术学习","slug":"技术学习","permalink":"http://flyingmcdonald.github.io/tags/技术学习/"}]}]}